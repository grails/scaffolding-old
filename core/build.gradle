buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.8.4"
}

group "org.grails"

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'provided-base'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
    userOrg = 'grails'
    repo = 'grails-core'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.grails:grails-core"
    compile "org.grails:grails-datastore-core"
    compile "org.grails:grails-datastore-gorm-validation"
    compile "org.grails:grails-web-url-mappings"
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    
    testCompile "org.hibernate:hibernate-core:4.3.11.Final"
    testCompile "org.grails:grails-datastore-gorm-hibernate-core:6.0.10.RELEASE"
    testCompile "org.spockframework:spock-core:1.2-groovy-2.5"
    testCompile 'net.bytebuddy:byte-buddy:1.9.4'
    testCompile 'org.objenesis:objenesis:3.0.1'
}

task sourcesJar(type:Jar) {
    classifier = 'sources'
    from project.sourceSets.main.allSource
}

task javadocJar(type:Jar) {
    classifier = 'javadoc'
    from groovydoc.outputs
}

// Used for publishing to central repository, remove if not needed
apply from:'../publishing/grailsCentralPublishing.gradle'
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'


task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}